char file_name[50];
    cin>>file_name;
    ifstream myfile(file_name);        //open the file
    string temp;    
    while(getline(myfile,temp))        //read line by line 
    {
        istringstream is(temp);    
        string text;
        while(is>>text)             //remove the space
        {
            ...
        }
string str;
string key_word[32] =
{
    "auto","break","case","char","const","continue","default","do ",
    "double","else","enum","extern","float","for","goto","if","int",
    "long","register","return","short","signed","sizeof","stastic",
    "struct","switch","typedef","union","unsigned","void","volatile","while"
};
 
 int Check1(string str,string str1)    
{
    int Check_letter(char str);
    int local=str.find(str1,0);
    int len=str1.length();
    if(local!=string::npos)
    {
        if(local==0)
        {
            if(Check_letter(str[local+len])==0)
                return 1;
            else 
                return 0;
        }
        else
        {
            if(Check_letter(str[local-1])==0&&Check_letter(str[local+len])==0)
                return 1;
            else
                return 0;
        }
    }
    return 0;
}
 
int Check_letter(char str)            
{
    if(str=='_'){
        return 0; 
       }
        
    if(str>='A'&&str<='Z'){
        return 1;
    }
    if(str>='a'&&str<='z'){
        return 1;
    }
    if(str>='0'&&str<='9'){
        
        return 0;
    }
    return 0;
}
 //Find several groups of switch-case structures and print them
void cal_switch_case()
{
     size_t switch_place = str.find(key_word[20]); 
    size_t case_place;
    int switch_num = 0;
    int case_num[50] = {0};
    while ( switch_place != str.npos )
    {
        switch_num ++;
        case_place = str.find(key_word[2],switch_place);
        while ( case_place != str.npos )
        {
            case_num[switch_num-1] ++;
            case_place = str.find(key_word[2],case_place+1);
        }
        switch_place = str.find(key_word[20],switch_place+1);
    }
    for (int i=0;i < switch_num-1;i++ )
    {
        case_num[i] -= case_num[i+1];
    }
    cout << "switch num: " << switch_num << endl;
    cout << "case num: ";
    for ( int i=0; i<switch_num; i++)
    {
        cout << case_num[i] << " ";
    }
    cout << endl;
} 
 
 //Find several groups of switch-case structures and print them
void cal_switch_case()
{
     size_t switch_place = str.find(key_word[20]); 
    size_t case_place;
    int switch_num = 0;
    int case_num[50] = {0};
    while ( switch_place != str.npos )
    {
        switch_num ++;
        case_place = str.find(key_word[2],switch_place);
        while ( case_place != str.npos )
        {
            case_num[switch_num-1] ++;
            case_place = str.find(key_word[2],case_place+1);
        }
        switch_place = str.find(key_word[20],switch_place+1);
    }
    for (int i=0;i < switch_num-1;i++ )
    {
        case_num[i] -= case_num[i+1];
    }
    cout << "switch num: " << switch_num << endl;
    cout << "case num: ";
    for ( int i=0; i<switch_num; i++)
    {
        cout << case_num[i] << " ";
    }
    cout << endl;
} 
 
 //Find several groups of switch-case structures and print them
void cal_switch_case()
{
     size_t switch_place = str.find(key_word[20]); 
    size_t case_place;
    int switch_num = 0;
    int case_num[50] = {0};
    while ( switch_place != str.npos )
    {
        switch_num ++;
        case_place = str.find(key_word[2],switch_place);
        while ( case_place != str.npos )
        {
            case_num[switch_num-1] ++;
            case_place = str.find(key_word[2],case_place+1);
        }
        switch_place = str.find(key_word[20],switch_place+1);
    }
    for (int i=0;i < switch_num-1;i++ )
    {
        case_num[i] -= case_num[i+1];
    }
    cout << "switch num: " << switch_num << endl;
    cout << "case num: ";
    for ( int i=0; i<switch_num; i++)
    {
        cout << case_num[i] << " ";
    }
    cout << endl;
} 
 
 
